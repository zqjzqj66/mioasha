<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.dao.OrderDOMapper">
    <resultMap id="BaseResultMap" type="com.imooc.dataobject.OrderDO">
        <id column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="item_id" property="itemId" jdbcType="INTEGER"/>
        <result column="item_price" property="itemPrice" jdbcType="DECIMAL"/>
        <result column="promo_id" property="promoId" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    order_id, user_id, item_id, item_price, amount,promo_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from order_info
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.imooc.dataobject.OrderDO" keyProperty="orderId" useGeneratedKeys="true">
    insert into order_info (order_id, user_id, item_id, 
      item_price, amount,promo_id)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{itemPrice,jdbcType=DECIMAL}, #{amount,jdbcType=INTEGER} , #{promoId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.imooc.dataobject.OrderDO" keyProperty="orderId"
            useGeneratedKeys="true">
        insert into order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="itemId != null">
                item_id,
            </if>
            <if test="itemPrice != null">
                item_price,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="promoId!= null">
                promo_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="itemId != null">
                #{itemId,jdbcType=INTEGER},
            </if>
            <if test="itemPrice != null">
                #{itemPrice,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="promoId!= null">
                #{promoId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.imooc.dataobject.OrderDO">
        update order_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="itemId != null">
                item_id = #{itemId,jdbcType=INTEGER},
            </if>
            <if test="itemPrice != null">
                item_price = #{itemPrice,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="promoId!= null">
                amount = #{promo_id,jdbcType=INTEGER},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.imooc.dataobject.OrderDO">
    update order_info
    set user_id = #{userId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      item_price = #{itemPrice,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=INTEGER}
      promo_id = #{promoId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>